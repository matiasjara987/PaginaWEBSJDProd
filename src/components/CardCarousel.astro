---
import type { CardItem } from '../types/card.d.ts';
import Card from './Card.astro';

interface Props {
  data: CardItem[];
  interval?: number;
}

const { data, interval = 3000 } = Astro.props;
---

<div class="carousel-container">
  <div class="carousel-track">
    {data.map((item, index) => (
      <div key={index} class="carousel-slide">
        <Card item={item} />
      </div>
    ))}
  </div>
  <div class="carousel-dots">
    {data.map((_, index) => (
      <span
        key={index}
        class={`dot ${index === currentIndex ? 'active' : ''}`}
        on:click={() => setCurrentIndex(index)}
      />
    ))}
  </div>
</div>

<script lang="ts">
  import { useState, useEffect } from 'react';
  
  const [currentIndex, setCurrentIndex] = useState(0);
  
  useEffect(() => {
    const timer = setInterval(() => {
      setCurrentIndex((prevIndex) => (prevIndex + 1) % data.length);
    }, interval);

    return () => clearInterval(timer);
  }, [data.length, interval]);
</script>

<style>
  .carousel-container {
    width: 300px;
    overflow: hidden;
    position: relative;
    margin: 0 auto;
  }
  
  .carousel-track {
    display: flex;
    transition: transform 0.5s ease;
    transform: translateX(-${currentIndex * 100}%);
  }
  
  .carousel-slide {
    min-width: 100%;
    flex-shrink: 0;
  }
  
  .carousel-dots {
    display: flex;
    justify-content: center;
    margin-top: 15px;
  }
  
  .dot {
    height: 10px;
    width: 10px;
    margin: 0 5px;
    background-color: #bbb;
    border-radius: 50%;
    display: inline-block;
    cursor: pointer;
  }
  
  .dot.active {
    background-color: #007bff;
  }
</style>